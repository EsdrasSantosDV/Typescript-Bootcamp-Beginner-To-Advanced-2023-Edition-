{
  "compilerOptions": {
//    TEMOS VARIAS VERSOES DISTINTAS DE JAVASCRIPT, CADA UMA COM UM FORMA DIFERENTE, ALGUMAS VERSOES
    //TEM ARROWNS FUNCTIONS OUTRAS NÃO
//    O ES5 TEM SUPORTE PRA 5 VERSOES DISTINTAS
    "target": "es5",
//    O ROOT DIR E O DIRECTORIO DE ONDE O COMPILADOR TYPESCRIPT VAI PEGAR OS ARQUIVOS PRA SEREM COMPILADOS
    "rootDir": "src",
//    O OUT DIR E O DIRETORIO ONDE IREMOS JOGAR OS ARQUVIOS JS SCRIPTS GERADOS
    "outDir": "dist",
//    O IDEAL E SEMPRE UTILIZAR O COMMON JS
    "module": "CommonJS",
    //BASE URL E isso vai apontar para o diretório onde as importações em nosso programa devem apontar caso isso
    //não estamos usando um caminho de importação relativo
    //import {addCourse, PAGE_SIZE} from "./13-exports-module";
    //ESSE ./ E UM CAMINHO RELATIVO
    "baseUrl": "src",
    "skipLibCheck": true,
    /*
    E quando esta propriedade for definida como true, o compilador TypeScript não verificará a validade dos tipos.
    Portanto, se houver pequenos erros de compilação nos tipos porque eles ainda não foram atualizados para o último
    versão TypeScript, pelo menos sua compilação não vai quebrar e você ainda poderá
    construa e implante seu programa como de costume, enquanto você espera pelas novas versões dos tipos, vamos agora
    continue a explorar o que mais podemos fazer com as configurações e o arquivo de configuração.
    */

  },
  "files": [
    "src/01-why-typescript.ts"
  ]
}